#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RockolasMedina
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RockolasMedina")]
	public partial class ConexionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCorte(Corte instance);
    partial void UpdateCorte(Corte instance);
    partial void DeleteCorte(Corte instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertMunicipio(Municipio instance);
    partial void UpdateMunicipio(Municipio instance);
    partial void DeleteMunicipio(Municipio instance);
    partial void InsertPagina(Pagina instance);
    partial void UpdatePagina(Pagina instance);
    partial void DeletePagina(Pagina instance);
    partial void InsertRenta(Renta instance);
    partial void UpdateRenta(Renta instance);
    partial void DeleteRenta(Renta instance);
    partial void InsertReparacion(Reparacion instance);
    partial void UpdateReparacion(Reparacion instance);
    partial void DeleteReparacion(Reparacion instance);
    partial void InsertRockola(Rockola instance);
    partial void UpdateRockola(Rockola instance);
    partial void DeleteRockola(Rockola instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertRolPagina(RolPagina instance);
    partial void UpdateRolPagina(RolPagina instance);
    partial void DeleteRolPagina(RolPagina instance);
    partial void InsertRuta(Ruta instance);
    partial void UpdateRuta(Ruta instance);
    partial void DeleteRuta(Ruta instance);
    partial void InsertSupervisor(Supervisor instance);
    partial void UpdateSupervisor(Supervisor instance);
    partial void DeleteSupervisor(Supervisor instance);
    partial void InsertTecnico(Tecnico instance);
    partial void UpdateTecnico(Tecnico instance);
    partial void DeleteTecnico(Tecnico instance);
    partial void InsertTipoRockola(TipoRockola instance);
    partial void UpdateTipoRockola(TipoRockola instance);
    partial void DeleteTipoRockola(TipoRockola instance);
    partial void InsertTipoUsuario(TipoUsuario instance);
    partial void UpdateTipoUsuario(TipoUsuario instance);
    partial void DeleteTipoUsuario(TipoUsuario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertVenta(Venta instance);
    partial void UpdateVenta(Venta instance);
    partial void DeleteVenta(Venta instance);
    #endregion
		
		public ConexionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RockolasMedinaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Corte> Cortes
		{
			get
			{
				return this.GetTable<Corte>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Municipio> Municipios
		{
			get
			{
				return this.GetTable<Municipio>();
			}
		}
		
		public System.Data.Linq.Table<Pagina> Paginas
		{
			get
			{
				return this.GetTable<Pagina>();
			}
		}
		
		public System.Data.Linq.Table<Renta> Rentas
		{
			get
			{
				return this.GetTable<Renta>();
			}
		}
		
		public System.Data.Linq.Table<Reparacion> Reparacions
		{
			get
			{
				return this.GetTable<Reparacion>();
			}
		}
		
		public System.Data.Linq.Table<Rockola> Rockolas
		{
			get
			{
				return this.GetTable<Rockola>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rols
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<RolPagina> RolPaginas
		{
			get
			{
				return this.GetTable<RolPagina>();
			}
		}
		
		public System.Data.Linq.Table<Ruta> Rutas
		{
			get
			{
				return this.GetTable<Ruta>();
			}
		}
		
		public System.Data.Linq.Table<Supervisor> Supervisors
		{
			get
			{
				return this.GetTable<Supervisor>();
			}
		}
		
		public System.Data.Linq.Table<Tecnico> Tecnicos
		{
			get
			{
				return this.GetTable<Tecnico>();
			}
		}
		
		public System.Data.Linq.Table<TipoRockola> TipoRockolas
		{
			get
			{
				return this.GetTable<TipoRockola>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuario> TipoUsuarios
		{
			get
			{
				return this.GetTable<TipoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Venta> Ventas
		{
			get
			{
				return this.GetTable<Venta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corte")]
	public partial class Corte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDcorte;
		
		private System.Nullable<decimal> _ContadorParcial;
		
		private System.Nullable<decimal> _ContadorFinal;
		
		private System.Nullable<decimal> _Efectivo;
		
		private System.Nullable<System.DateTime> _FechaCorte;
		
		private System.Nullable<int> _IDrockola;
		
		private System.Nullable<int> _IDruta;
		
		private System.Nullable<int> _IDtecnico;
		
		private System.Nullable<int> _Habilitado;
		
		private EntityRef<Rockola> _Rockola;
		
		private EntityRef<Ruta> _Ruta;
		
		private EntityRef<Tecnico> _Tecnico;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDcorteChanging(int value);
    partial void OnIDcorteChanged();
    partial void OnContadorParcialChanging(System.Nullable<decimal> value);
    partial void OnContadorParcialChanged();
    partial void OnContadorFinalChanging(System.Nullable<decimal> value);
    partial void OnContadorFinalChanged();
    partial void OnEfectivoChanging(System.Nullable<decimal> value);
    partial void OnEfectivoChanged();
    partial void OnFechaCorteChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaCorteChanged();
    partial void OnIDrockolaChanging(System.Nullable<int> value);
    partial void OnIDrockolaChanged();
    partial void OnIDrutaChanging(System.Nullable<int> value);
    partial void OnIDrutaChanged();
    partial void OnIDtecnicoChanging(System.Nullable<int> value);
    partial void OnIDtecnicoChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public Corte()
		{
			this._Rockola = default(EntityRef<Rockola>);
			this._Ruta = default(EntityRef<Ruta>);
			this._Tecnico = default(EntityRef<Tecnico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcorte", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDcorte
		{
			get
			{
				return this._IDcorte;
			}
			set
			{
				if ((this._IDcorte != value))
				{
					this.OnIDcorteChanging(value);
					this.SendPropertyChanging();
					this._IDcorte = value;
					this.SendPropertyChanged("IDcorte");
					this.OnIDcorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContadorParcial", DbType="Money")]
		public System.Nullable<decimal> ContadorParcial
		{
			get
			{
				return this._ContadorParcial;
			}
			set
			{
				if ((this._ContadorParcial != value))
				{
					this.OnContadorParcialChanging(value);
					this.SendPropertyChanging();
					this._ContadorParcial = value;
					this.SendPropertyChanged("ContadorParcial");
					this.OnContadorParcialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContadorFinal", DbType="Money")]
		public System.Nullable<decimal> ContadorFinal
		{
			get
			{
				return this._ContadorFinal;
			}
			set
			{
				if ((this._ContadorFinal != value))
				{
					this.OnContadorFinalChanging(value);
					this.SendPropertyChanging();
					this._ContadorFinal = value;
					this.SendPropertyChanged("ContadorFinal");
					this.OnContadorFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Efectivo", DbType="Money")]
		public System.Nullable<decimal> Efectivo
		{
			get
			{
				return this._Efectivo;
			}
			set
			{
				if ((this._Efectivo != value))
				{
					this.OnEfectivoChanging(value);
					this.SendPropertyChanging();
					this._Efectivo = value;
					this.SendPropertyChanged("Efectivo");
					this.OnEfectivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCorte", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaCorte
		{
			get
			{
				return this._FechaCorte;
			}
			set
			{
				if ((this._FechaCorte != value))
				{
					this.OnFechaCorteChanging(value);
					this.SendPropertyChanging();
					this._FechaCorte = value;
					this.SendPropertyChanged("FechaCorte");
					this.OnFechaCorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrockola", DbType="Int")]
		public System.Nullable<int> IDrockola
		{
			get
			{
				return this._IDrockola;
			}
			set
			{
				if ((this._IDrockola != value))
				{
					if (this._Rockola.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrockolaChanging(value);
					this.SendPropertyChanging();
					this._IDrockola = value;
					this.SendPropertyChanged("IDrockola");
					this.OnIDrockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDruta", DbType="Int")]
		public System.Nullable<int> IDruta
		{
			get
			{
				return this._IDruta;
			}
			set
			{
				if ((this._IDruta != value))
				{
					if (this._Ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrutaChanging(value);
					this.SendPropertyChanging();
					this._IDruta = value;
					this.SendPropertyChanged("IDruta");
					this.OnIDrutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtecnico", DbType="Int")]
		public System.Nullable<int> IDtecnico
		{
			get
			{
				return this._IDtecnico;
			}
			set
			{
				if ((this._IDtecnico != value))
				{
					if (this._Tecnico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDtecnicoChanging(value);
					this.SendPropertyChanging();
					this._IDtecnico = value;
					this.SendPropertyChanged("IDtecnico");
					this.OnIDtecnicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rockola_Corte", Storage="_Rockola", ThisKey="IDrockola", OtherKey="IDrockola", IsForeignKey=true)]
		public Rockola Rockola
		{
			get
			{
				return this._Rockola.Entity;
			}
			set
			{
				Rockola previousValue = this._Rockola.Entity;
				if (((previousValue != value) 
							|| (this._Rockola.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rockola.Entity = null;
						previousValue.Cortes.Remove(this);
					}
					this._Rockola.Entity = value;
					if ((value != null))
					{
						value.Cortes.Add(this);
						this._IDrockola = value.IDrockola;
					}
					else
					{
						this._IDrockola = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rockola");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Corte", Storage="_Ruta", ThisKey="IDruta", OtherKey="IDruta", IsForeignKey=true)]
		public Ruta Ruta
		{
			get
			{
				return this._Ruta.Entity;
			}
			set
			{
				Ruta previousValue = this._Ruta.Entity;
				if (((previousValue != value) 
							|| (this._Ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ruta.Entity = null;
						previousValue.Cortes.Remove(this);
					}
					this._Ruta.Entity = value;
					if ((value != null))
					{
						value.Cortes.Add(this);
						this._IDruta = value.IDruta;
					}
					else
					{
						this._IDruta = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ruta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnico_Corte", Storage="_Tecnico", ThisKey="IDtecnico", OtherKey="IDtecnico", IsForeignKey=true)]
		public Tecnico Tecnico
		{
			get
			{
				return this._Tecnico.Entity;
			}
			set
			{
				Tecnico previousValue = this._Tecnico.Entity;
				if (((previousValue != value) 
							|| (this._Tecnico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnico.Entity = null;
						previousValue.Cortes.Remove(this);
					}
					this._Tecnico.Entity = value;
					if ((value != null))
					{
						value.Cortes.Add(this);
						this._IDtecnico = value.IDtecnico;
					}
					else
					{
						this._IDtecnico = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tecnico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDestado;
		
		private string _Estados;
		
		private EntitySet<Supervisor> _Supervisors;
		
		private EntitySet<Tecnico> _Tecnicos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDestadoChanging(int value);
    partial void OnIDestadoChanged();
    partial void OnEstadosChanging(string value);
    partial void OnEstadosChanged();
    #endregion
		
		public Estado()
		{
			this._Supervisors = new EntitySet<Supervisor>(new Action<Supervisor>(this.attach_Supervisors), new Action<Supervisor>(this.detach_Supervisors));
			this._Tecnicos = new EntitySet<Tecnico>(new Action<Tecnico>(this.attach_Tecnicos), new Action<Tecnico>(this.detach_Tecnicos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estados", DbType="NVarChar(100)")]
		public string Estados
		{
			get
			{
				return this._Estados;
			}
			set
			{
				if ((this._Estados != value))
				{
					this.OnEstadosChanging(value);
					this.SendPropertyChanging();
					this._Estados = value;
					this.SendPropertyChanged("Estados");
					this.OnEstadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Supervisor", Storage="_Supervisors", ThisKey="IDestado", OtherKey="IDestado")]
		public EntitySet<Supervisor> Supervisors
		{
			get
			{
				return this._Supervisors;
			}
			set
			{
				this._Supervisors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Tecnico", Storage="_Tecnicos", ThisKey="IDestado", OtherKey="IDestado")]
		public EntitySet<Tecnico> Tecnicos
		{
			get
			{
				return this._Tecnicos;
			}
			set
			{
				this._Tecnicos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Supervisors(Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Supervisors(Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_Tecnicos(Tecnico entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Tecnicos(Tecnico entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Municipio")]
	public partial class Municipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDmunicipio;
		
		private string _Nombre;
		
		private string _Departamento;
		
		private System.Nullable<int> _IDruta;
		
		private System.Nullable<int> _Habilitado;
		
		private EntitySet<Renta> _Rentas;
		
		private EntityRef<Ruta> _Ruta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDmunicipioChanging(int value);
    partial void OnIDmunicipioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDepartamentoChanging(string value);
    partial void OnDepartamentoChanged();
    partial void OnIDrutaChanging(System.Nullable<int> value);
    partial void OnIDrutaChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public Municipio()
		{
			this._Rentas = new EntitySet<Renta>(new Action<Renta>(this.attach_Rentas), new Action<Renta>(this.detach_Rentas));
			this._Ruta = default(EntityRef<Ruta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmunicipio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDmunicipio
		{
			get
			{
				return this._IDmunicipio;
			}
			set
			{
				if ((this._IDmunicipio != value))
				{
					this.OnIDmunicipioChanging(value);
					this.SendPropertyChanging();
					this._IDmunicipio = value;
					this.SendPropertyChanged("IDmunicipio");
					this.OnIDmunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(200)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departamento", DbType="NChar(10)")]
		public string Departamento
		{
			get
			{
				return this._Departamento;
			}
			set
			{
				if ((this._Departamento != value))
				{
					this.OnDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._Departamento = value;
					this.SendPropertyChanged("Departamento");
					this.OnDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDruta", DbType="Int")]
		public System.Nullable<int> IDruta
		{
			get
			{
				return this._IDruta;
			}
			set
			{
				if ((this._IDruta != value))
				{
					if (this._Ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrutaChanging(value);
					this.SendPropertyChanging();
					this._IDruta = value;
					this.SendPropertyChanged("IDruta");
					this.OnIDrutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Renta", Storage="_Rentas", ThisKey="IDmunicipio", OtherKey="IDmunicipio")]
		public EntitySet<Renta> Rentas
		{
			get
			{
				return this._Rentas;
			}
			set
			{
				this._Rentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Municipio", Storage="_Ruta", ThisKey="IDruta", OtherKey="IDruta", IsForeignKey=true)]
		public Ruta Ruta
		{
			get
			{
				return this._Ruta.Entity;
			}
			set
			{
				Ruta previousValue = this._Ruta.Entity;
				if (((previousValue != value) 
							|| (this._Ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ruta.Entity = null;
						previousValue.Municipios.Remove(this);
					}
					this._Ruta.Entity = value;
					if ((value != null))
					{
						value.Municipios.Add(this);
						this._IDruta = value.IDruta;
					}
					else
					{
						this._IDruta = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ruta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pagina")]
	public partial class Pagina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDpagina;
		
		private string _Mensaje;
		
		private string _Accion;
		
		private string _Controlador;
		
		private System.Nullable<int> _Habilitado;
		
		private EntitySet<RolPagina> _RolPaginas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDpaginaChanging(int value);
    partial void OnIDpaginaChanged();
    partial void OnMensajeChanging(string value);
    partial void OnMensajeChanged();
    partial void OnAccionChanging(string value);
    partial void OnAccionChanged();
    partial void OnControladorChanging(string value);
    partial void OnControladorChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public Pagina()
		{
			this._RolPaginas = new EntitySet<RolPagina>(new Action<RolPagina>(this.attach_RolPaginas), new Action<RolPagina>(this.detach_RolPaginas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpagina", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDpagina
		{
			get
			{
				return this._IDpagina;
			}
			set
			{
				if ((this._IDpagina != value))
				{
					this.OnIDpaginaChanging(value);
					this.SendPropertyChanging();
					this._IDpagina = value;
					this.SendPropertyChanged("IDpagina");
					this.OnIDpaginaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="NVarChar(100)")]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this.OnMensajeChanging(value);
					this.SendPropertyChanging();
					this._Mensaje = value;
					this.SendPropertyChanged("Mensaje");
					this.OnMensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accion", DbType="NVarChar(50)")]
		public string Accion
		{
			get
			{
				return this._Accion;
			}
			set
			{
				if ((this._Accion != value))
				{
					this.OnAccionChanging(value);
					this.SendPropertyChanging();
					this._Accion = value;
					this.SendPropertyChanged("Accion");
					this.OnAccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controlador", DbType="NVarChar(50)")]
		public string Controlador
		{
			get
			{
				return this._Controlador;
			}
			set
			{
				if ((this._Controlador != value))
				{
					this.OnControladorChanging(value);
					this.SendPropertyChanging();
					this._Controlador = value;
					this.SendPropertyChanged("Controlador");
					this.OnControladorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pagina_RolPagina", Storage="_RolPaginas", ThisKey="IDpagina", OtherKey="IDpagina")]
		public EntitySet<RolPagina> RolPaginas
		{
			get
			{
				return this._RolPaginas;
			}
			set
			{
				this._RolPaginas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolPaginas(RolPagina entity)
		{
			this.SendPropertyChanging();
			entity.Pagina = this;
		}
		
		private void detach_RolPaginas(RolPagina entity)
		{
			this.SendPropertyChanging();
			entity.Pagina = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Renta")]
	public partial class Renta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDrenta;
		
		private string _ClienteRentaNombre;
		
		private System.Nullable<long> _DPInumero;
		
		private System.Nullable<int> _TelefonoCliente;
		
		private string _Direccion;
		
		private System.Nullable<int> _IDrockola;
		
		private System.Nullable<int> _IDruta;
		
		private System.Nullable<int> _IDmunicipio;
		
		private System.Nullable<int> _Habilitado;
		
		private System.Nullable<System.DateTime> _FechaRenta;
		
		private EntityRef<Municipio> _Municipio;
		
		private EntityRef<Rockola> _Rockola;
		
		private EntityRef<Ruta> _Ruta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDrentaChanging(int value);
    partial void OnIDrentaChanged();
    partial void OnClienteRentaNombreChanging(string value);
    partial void OnClienteRentaNombreChanged();
    partial void OnDPInumeroChanging(System.Nullable<long> value);
    partial void OnDPInumeroChanged();
    partial void OnTelefonoClienteChanging(System.Nullable<int> value);
    partial void OnTelefonoClienteChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnIDrockolaChanging(System.Nullable<int> value);
    partial void OnIDrockolaChanged();
    partial void OnIDrutaChanging(System.Nullable<int> value);
    partial void OnIDrutaChanged();
    partial void OnIDmunicipioChanging(System.Nullable<int> value);
    partial void OnIDmunicipioChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    partial void OnFechaRentaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaRentaChanged();
    #endregion
		
		public Renta()
		{
			this._Municipio = default(EntityRef<Municipio>);
			this._Rockola = default(EntityRef<Rockola>);
			this._Ruta = default(EntityRef<Ruta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrenta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDrenta
		{
			get
			{
				return this._IDrenta;
			}
			set
			{
				if ((this._IDrenta != value))
				{
					this.OnIDrentaChanging(value);
					this.SendPropertyChanging();
					this._IDrenta = value;
					this.SendPropertyChanged("IDrenta");
					this.OnIDrentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteRentaNombre", DbType="NVarChar(250)")]
		public string ClienteRentaNombre
		{
			get
			{
				return this._ClienteRentaNombre;
			}
			set
			{
				if ((this._ClienteRentaNombre != value))
				{
					this.OnClienteRentaNombreChanging(value);
					this.SendPropertyChanging();
					this._ClienteRentaNombre = value;
					this.SendPropertyChanged("ClienteRentaNombre");
					this.OnClienteRentaNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPInumero", DbType="BigInt")]
		public System.Nullable<long> DPInumero
		{
			get
			{
				return this._DPInumero;
			}
			set
			{
				if ((this._DPInumero != value))
				{
					this.OnDPInumeroChanging(value);
					this.SendPropertyChanging();
					this._DPInumero = value;
					this.SendPropertyChanged("DPInumero");
					this.OnDPInumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoCliente", DbType="Int")]
		public System.Nullable<int> TelefonoCliente
		{
			get
			{
				return this._TelefonoCliente;
			}
			set
			{
				if ((this._TelefonoCliente != value))
				{
					this.OnTelefonoClienteChanging(value);
					this.SendPropertyChanging();
					this._TelefonoCliente = value;
					this.SendPropertyChanged("TelefonoCliente");
					this.OnTelefonoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(250)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrockola", DbType="Int")]
		public System.Nullable<int> IDrockola
		{
			get
			{
				return this._IDrockola;
			}
			set
			{
				if ((this._IDrockola != value))
				{
					if (this._Rockola.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrockolaChanging(value);
					this.SendPropertyChanging();
					this._IDrockola = value;
					this.SendPropertyChanged("IDrockola");
					this.OnIDrockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDruta", DbType="Int")]
		public System.Nullable<int> IDruta
		{
			get
			{
				return this._IDruta;
			}
			set
			{
				if ((this._IDruta != value))
				{
					if (this._Ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrutaChanging(value);
					this.SendPropertyChanging();
					this._IDruta = value;
					this.SendPropertyChanged("IDruta");
					this.OnIDrutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmunicipio", DbType="Int")]
		public System.Nullable<int> IDmunicipio
		{
			get
			{
				return this._IDmunicipio;
			}
			set
			{
				if ((this._IDmunicipio != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDmunicipioChanging(value);
					this.SendPropertyChanging();
					this._IDmunicipio = value;
					this.SendPropertyChanged("IDmunicipio");
					this.OnIDmunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRenta", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaRenta
		{
			get
			{
				return this._FechaRenta;
			}
			set
			{
				if ((this._FechaRenta != value))
				{
					this.OnFechaRentaChanging(value);
					this.SendPropertyChanging();
					this._FechaRenta = value;
					this.SendPropertyChanged("FechaRenta");
					this.OnFechaRentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Renta", Storage="_Municipio", ThisKey="IDmunicipio", OtherKey="IDmunicipio", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Rentas.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Rentas.Add(this);
						this._IDmunicipio = value.IDmunicipio;
					}
					else
					{
						this._IDmunicipio = default(Nullable<int>);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rockola_Renta", Storage="_Rockola", ThisKey="IDrockola", OtherKey="IDrockola", IsForeignKey=true)]
		public Rockola Rockola
		{
			get
			{
				return this._Rockola.Entity;
			}
			set
			{
				Rockola previousValue = this._Rockola.Entity;
				if (((previousValue != value) 
							|| (this._Rockola.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rockola.Entity = null;
						previousValue.Rentas.Remove(this);
					}
					this._Rockola.Entity = value;
					if ((value != null))
					{
						value.Rentas.Add(this);
						this._IDrockola = value.IDrockola;
					}
					else
					{
						this._IDrockola = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rockola");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Renta", Storage="_Ruta", ThisKey="IDruta", OtherKey="IDruta", IsForeignKey=true)]
		public Ruta Ruta
		{
			get
			{
				return this._Ruta.Entity;
			}
			set
			{
				Ruta previousValue = this._Ruta.Entity;
				if (((previousValue != value) 
							|| (this._Ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ruta.Entity = null;
						previousValue.Rentas.Remove(this);
					}
					this._Ruta.Entity = value;
					if ((value != null))
					{
						value.Rentas.Add(this);
						this._IDruta = value.IDruta;
					}
					else
					{
						this._IDruta = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ruta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reparacion")]
	public partial class Reparacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDreparacion;
		
		private string _ParteNombre;
		
		private System.Nullable<int> _IDruta;
		
		private System.Nullable<int> _IDtecnico;
		
		private System.Nullable<System.DateTime> _FechaReparacion;
		
		private string _Comentario;
		
		private System.Nullable<int> _IDrockola;
		
		private System.Nullable<int> _Habilitado;
		
		private EntityRef<Ruta> _Ruta;
		
		private EntityRef<Tecnico> _Tecnico;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDreparacionChanging(int value);
    partial void OnIDreparacionChanged();
    partial void OnParteNombreChanging(string value);
    partial void OnParteNombreChanged();
    partial void OnIDrutaChanging(System.Nullable<int> value);
    partial void OnIDrutaChanged();
    partial void OnIDtecnicoChanging(System.Nullable<int> value);
    partial void OnIDtecnicoChanged();
    partial void OnFechaReparacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaReparacionChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    partial void OnIDrockolaChanging(System.Nullable<int> value);
    partial void OnIDrockolaChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public Reparacion()
		{
			this._Ruta = default(EntityRef<Ruta>);
			this._Tecnico = default(EntityRef<Tecnico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDreparacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDreparacion
		{
			get
			{
				return this._IDreparacion;
			}
			set
			{
				if ((this._IDreparacion != value))
				{
					this.OnIDreparacionChanging(value);
					this.SendPropertyChanging();
					this._IDreparacion = value;
					this.SendPropertyChanged("IDreparacion");
					this.OnIDreparacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParteNombre", DbType="NVarChar(100)")]
		public string ParteNombre
		{
			get
			{
				return this._ParteNombre;
			}
			set
			{
				if ((this._ParteNombre != value))
				{
					this.OnParteNombreChanging(value);
					this.SendPropertyChanging();
					this._ParteNombre = value;
					this.SendPropertyChanged("ParteNombre");
					this.OnParteNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDruta", DbType="Int")]
		public System.Nullable<int> IDruta
		{
			get
			{
				return this._IDruta;
			}
			set
			{
				if ((this._IDruta != value))
				{
					if (this._Ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrutaChanging(value);
					this.SendPropertyChanging();
					this._IDruta = value;
					this.SendPropertyChanged("IDruta");
					this.OnIDrutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtecnico", DbType="Int")]
		public System.Nullable<int> IDtecnico
		{
			get
			{
				return this._IDtecnico;
			}
			set
			{
				if ((this._IDtecnico != value))
				{
					if (this._Tecnico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDtecnicoChanging(value);
					this.SendPropertyChanging();
					this._IDtecnico = value;
					this.SendPropertyChanged("IDtecnico");
					this.OnIDtecnicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaReparacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaReparacion
		{
			get
			{
				return this._FechaReparacion;
			}
			set
			{
				if ((this._FechaReparacion != value))
				{
					this.OnFechaReparacionChanging(value);
					this.SendPropertyChanging();
					this._FechaReparacion = value;
					this.SendPropertyChanged("FechaReparacion");
					this.OnFechaReparacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentario", DbType="NVarChar(1000)")]
		public string Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				if ((this._Comentario != value))
				{
					this.OnComentarioChanging(value);
					this.SendPropertyChanging();
					this._Comentario = value;
					this.SendPropertyChanged("Comentario");
					this.OnComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrockola", DbType="Int")]
		public System.Nullable<int> IDrockola
		{
			get
			{
				return this._IDrockola;
			}
			set
			{
				if ((this._IDrockola != value))
				{
					this.OnIDrockolaChanging(value);
					this.SendPropertyChanging();
					this._IDrockola = value;
					this.SendPropertyChanged("IDrockola");
					this.OnIDrockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Reparacion", Storage="_Ruta", ThisKey="IDruta", OtherKey="IDruta", IsForeignKey=true)]
		public Ruta Ruta
		{
			get
			{
				return this._Ruta.Entity;
			}
			set
			{
				Ruta previousValue = this._Ruta.Entity;
				if (((previousValue != value) 
							|| (this._Ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ruta.Entity = null;
						previousValue.Reparacions.Remove(this);
					}
					this._Ruta.Entity = value;
					if ((value != null))
					{
						value.Reparacions.Add(this);
						this._IDruta = value.IDruta;
					}
					else
					{
						this._IDruta = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ruta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnico_Reparacion", Storage="_Tecnico", ThisKey="IDtecnico", OtherKey="IDtecnico", IsForeignKey=true)]
		public Tecnico Tecnico
		{
			get
			{
				return this._Tecnico.Entity;
			}
			set
			{
				Tecnico previousValue = this._Tecnico.Entity;
				if (((previousValue != value) 
							|| (this._Tecnico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnico.Entity = null;
						previousValue.Reparacions.Remove(this);
					}
					this._Tecnico.Entity = value;
					if ((value != null))
					{
						value.Reparacions.Add(this);
						this._IDtecnico = value.IDtecnico;
					}
					else
					{
						this._IDtecnico = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tecnico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rockola")]
	public partial class Rockola : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDrockola;
		
		private string _motherb;
		
		private string _ram;
		
		private string _procesador;
		
		private string _fuentep;
		
		private string _hddcapacidad;
		
		private string _monitor;
		
		private string _teclado;
		
		private System.Nullable<System.DateTime> _fechaFabricacion;
		
		private System.Nullable<int> _habilitado;
		
		private EntitySet<Corte> _Cortes;
		
		private EntitySet<Renta> _Rentas;
		
		private EntitySet<Venta> _Ventas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDrockolaChanging(int value);
    partial void OnIDrockolaChanged();
    partial void OnmotherbChanging(string value);
    partial void OnmotherbChanged();
    partial void OnramChanging(string value);
    partial void OnramChanged();
    partial void OnprocesadorChanging(string value);
    partial void OnprocesadorChanged();
    partial void OnfuentepChanging(string value);
    partial void OnfuentepChanged();
    partial void OnhddcapacidadChanging(string value);
    partial void OnhddcapacidadChanged();
    partial void OnmonitorChanging(string value);
    partial void OnmonitorChanged();
    partial void OntecladoChanging(string value);
    partial void OntecladoChanged();
    partial void OnfechaFabricacionChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaFabricacionChanged();
    partial void OnhabilitadoChanging(System.Nullable<int> value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Rockola()
		{
			this._Cortes = new EntitySet<Corte>(new Action<Corte>(this.attach_Cortes), new Action<Corte>(this.detach_Cortes));
			this._Rentas = new EntitySet<Renta>(new Action<Renta>(this.attach_Rentas), new Action<Renta>(this.detach_Rentas));
			this._Ventas = new EntitySet<Venta>(new Action<Venta>(this.attach_Ventas), new Action<Venta>(this.detach_Ventas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrockola", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDrockola
		{
			get
			{
				return this._IDrockola;
			}
			set
			{
				if ((this._IDrockola != value))
				{
					this.OnIDrockolaChanging(value);
					this.SendPropertyChanging();
					this._IDrockola = value;
					this.SendPropertyChanged("IDrockola");
					this.OnIDrockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherb", DbType="NVarChar(100)")]
		public string motherb
		{
			get
			{
				return this._motherb;
			}
			set
			{
				if ((this._motherb != value))
				{
					this.OnmotherbChanging(value);
					this.SendPropertyChanging();
					this._motherb = value;
					this.SendPropertyChanged("motherb");
					this.OnmotherbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ram", DbType="NVarChar(100)")]
		public string ram
		{
			get
			{
				return this._ram;
			}
			set
			{
				if ((this._ram != value))
				{
					this.OnramChanging(value);
					this.SendPropertyChanging();
					this._ram = value;
					this.SendPropertyChanged("ram");
					this.OnramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procesador", DbType="NVarChar(100)")]
		public string procesador
		{
			get
			{
				return this._procesador;
			}
			set
			{
				if ((this._procesador != value))
				{
					this.OnprocesadorChanging(value);
					this.SendPropertyChanging();
					this._procesador = value;
					this.SendPropertyChanged("procesador");
					this.OnprocesadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fuentep", DbType="NVarChar(100)")]
		public string fuentep
		{
			get
			{
				return this._fuentep;
			}
			set
			{
				if ((this._fuentep != value))
				{
					this.OnfuentepChanging(value);
					this.SendPropertyChanging();
					this._fuentep = value;
					this.SendPropertyChanged("fuentep");
					this.OnfuentepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hddcapacidad", DbType="NVarChar(100)")]
		public string hddcapacidad
		{
			get
			{
				return this._hddcapacidad;
			}
			set
			{
				if ((this._hddcapacidad != value))
				{
					this.OnhddcapacidadChanging(value);
					this.SendPropertyChanging();
					this._hddcapacidad = value;
					this.SendPropertyChanged("hddcapacidad");
					this.OnhddcapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monitor", DbType="NVarChar(100)")]
		public string monitor
		{
			get
			{
				return this._monitor;
			}
			set
			{
				if ((this._monitor != value))
				{
					this.OnmonitorChanging(value);
					this.SendPropertyChanging();
					this._monitor = value;
					this.SendPropertyChanged("monitor");
					this.OnmonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teclado", DbType="NVarChar(100)")]
		public string teclado
		{
			get
			{
				return this._teclado;
			}
			set
			{
				if ((this._teclado != value))
				{
					this.OntecladoChanging(value);
					this.SendPropertyChanging();
					this._teclado = value;
					this.SendPropertyChanged("teclado");
					this.OntecladoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaFabricacion", DbType="Date")]
		public System.Nullable<System.DateTime> fechaFabricacion
		{
			get
			{
				return this._fechaFabricacion;
			}
			set
			{
				if ((this._fechaFabricacion != value))
				{
					this.OnfechaFabricacionChanging(value);
					this.SendPropertyChanging();
					this._fechaFabricacion = value;
					this.SendPropertyChanged("fechaFabricacion");
					this.OnfechaFabricacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="Int")]
		public System.Nullable<int> habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rockola_Corte", Storage="_Cortes", ThisKey="IDrockola", OtherKey="IDrockola")]
		public EntitySet<Corte> Cortes
		{
			get
			{
				return this._Cortes;
			}
			set
			{
				this._Cortes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rockola_Renta", Storage="_Rentas", ThisKey="IDrockola", OtherKey="IDrockola")]
		public EntitySet<Renta> Rentas
		{
			get
			{
				return this._Rentas;
			}
			set
			{
				this._Rentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rockola_Venta", Storage="_Ventas", ThisKey="IDrockola", OtherKey="IDrockola")]
		public EntitySet<Venta> Ventas
		{
			get
			{
				return this._Ventas;
			}
			set
			{
				this._Ventas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cortes(Corte entity)
		{
			this.SendPropertyChanging();
			entity.Rockola = this;
		}
		
		private void detach_Cortes(Corte entity)
		{
			this.SendPropertyChanging();
			entity.Rockola = null;
		}
		
		private void attach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Rockola = this;
		}
		
		private void detach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Rockola = null;
		}
		
		private void attach_Ventas(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Rockola = this;
		}
		
		private void detach_Ventas(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Rockola = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDrol;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private System.Nullable<int> _Habilitado;
		
		private EntitySet<RolPagina> _RolPaginas;
		
		private EntitySet<Usuario> _Usuarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDrolChanging(int value);
    partial void OnIDrolChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public Rol()
		{
			this._RolPaginas = new EntitySet<RolPagina>(new Action<RolPagina>(this.attach_RolPaginas), new Action<RolPagina>(this.detach_RolPaginas));
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDrol
		{
			get
			{
				return this._IDrol;
			}
			set
			{
				if ((this._IDrol != value))
				{
					this.OnIDrolChanging(value);
					this.SendPropertyChanging();
					this._IDrol = value;
					this.SendPropertyChanged("IDrol");
					this.OnIDrolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(300)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_RolPagina", Storage="_RolPaginas", ThisKey="IDrol", OtherKey="IDrol")]
		public EntitySet<RolPagina> RolPaginas
		{
			get
			{
				return this._RolPaginas;
			}
			set
			{
				this._RolPaginas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Usuarios", ThisKey="IDrol", OtherKey="IDrol")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolPaginas(RolPagina entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_RolPaginas(RolPagina entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolPagina")]
	public partial class RolPagina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDrol;
		
		private int _IDpagina;
		
		private System.Nullable<int> _Habilitado;
		
		private EntityRef<Pagina> _Pagina;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDrolChanging(int value);
    partial void OnIDrolChanged();
    partial void OnIDpaginaChanging(int value);
    partial void OnIDpaginaChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public RolPagina()
		{
			this._Pagina = default(EntityRef<Pagina>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDrol
		{
			get
			{
				return this._IDrol;
			}
			set
			{
				if ((this._IDrol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrolChanging(value);
					this.SendPropertyChanging();
					this._IDrol = value;
					this.SendPropertyChanged("IDrol");
					this.OnIDrolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpagina", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDpagina
		{
			get
			{
				return this._IDpagina;
			}
			set
			{
				if ((this._IDpagina != value))
				{
					if (this._Pagina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDpaginaChanging(value);
					this.SendPropertyChanging();
					this._IDpagina = value;
					this.SendPropertyChanged("IDpagina");
					this.OnIDpaginaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pagina_RolPagina", Storage="_Pagina", ThisKey="IDpagina", OtherKey="IDpagina", IsForeignKey=true)]
		public Pagina Pagina
		{
			get
			{
				return this._Pagina.Entity;
			}
			set
			{
				Pagina previousValue = this._Pagina.Entity;
				if (((previousValue != value) 
							|| (this._Pagina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pagina.Entity = null;
						previousValue.RolPaginas.Remove(this);
					}
					this._Pagina.Entity = value;
					if ((value != null))
					{
						value.RolPaginas.Add(this);
						this._IDpagina = value.IDpagina;
					}
					else
					{
						this._IDpagina = default(int);
					}
					this.SendPropertyChanged("Pagina");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_RolPagina", Storage="_Rol", ThisKey="IDrol", OtherKey="IDrol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.RolPaginas.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.RolPaginas.Add(this);
						this._IDrol = value.IDrol;
					}
					else
					{
						this._IDrol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ruta")]
	public partial class Ruta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDruta;
		
		private string _Nombre;
		
		private EntitySet<Corte> _Cortes;
		
		private EntitySet<Municipio> _Municipios;
		
		private EntitySet<Renta> _Rentas;
		
		private EntitySet<Reparacion> _Reparacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDrutaChanging(int value);
    partial void OnIDrutaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Ruta()
		{
			this._Cortes = new EntitySet<Corte>(new Action<Corte>(this.attach_Cortes), new Action<Corte>(this.detach_Cortes));
			this._Municipios = new EntitySet<Municipio>(new Action<Municipio>(this.attach_Municipios), new Action<Municipio>(this.detach_Municipios));
			this._Rentas = new EntitySet<Renta>(new Action<Renta>(this.attach_Rentas), new Action<Renta>(this.detach_Rentas));
			this._Reparacions = new EntitySet<Reparacion>(new Action<Reparacion>(this.attach_Reparacions), new Action<Reparacion>(this.detach_Reparacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDruta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDruta
		{
			get
			{
				return this._IDruta;
			}
			set
			{
				if ((this._IDruta != value))
				{
					this.OnIDrutaChanging(value);
					this.SendPropertyChanging();
					this._IDruta = value;
					this.SendPropertyChanged("IDruta");
					this.OnIDrutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Corte", Storage="_Cortes", ThisKey="IDruta", OtherKey="IDruta")]
		public EntitySet<Corte> Cortes
		{
			get
			{
				return this._Cortes;
			}
			set
			{
				this._Cortes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Municipio", Storage="_Municipios", ThisKey="IDruta", OtherKey="IDruta")]
		public EntitySet<Municipio> Municipios
		{
			get
			{
				return this._Municipios;
			}
			set
			{
				this._Municipios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Renta", Storage="_Rentas", ThisKey="IDruta", OtherKey="IDruta")]
		public EntitySet<Renta> Rentas
		{
			get
			{
				return this._Rentas;
			}
			set
			{
				this._Rentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_Reparacion", Storage="_Reparacions", ThisKey="IDruta", OtherKey="IDruta")]
		public EntitySet<Reparacion> Reparacions
		{
			get
			{
				return this._Reparacions;
			}
			set
			{
				this._Reparacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cortes(Corte entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = this;
		}
		
		private void detach_Cortes(Corte entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = null;
		}
		
		private void attach_Municipios(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = this;
		}
		
		private void detach_Municipios(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = null;
		}
		
		private void attach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = this;
		}
		
		private void detach_Rentas(Renta entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = null;
		}
		
		private void attach_Reparacions(Reparacion entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = this;
		}
		
		private void detach_Reparacions(Reparacion entity)
		{
			this.SendPropertyChanging();
			entity.Ruta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supervisor")]
	public partial class Supervisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDsupervisor;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Telefono;
		
		private System.Nullable<System.DateTime> _FechaAlt;
		
		private System.Nullable<int> _IDestado;
		
		private System.Nullable<char> _IDtipousuario;
		
		private System.Nullable<int> _bTieneUsuario;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDsupervisorChanging(int value);
    partial void OnIDsupervisorChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFechaAltChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaAltChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    partial void OnIDtipousuarioChanging(System.Nullable<char> value);
    partial void OnIDtipousuarioChanged();
    partial void OnbTieneUsuarioChanging(System.Nullable<int> value);
    partial void OnbTieneUsuarioChanged();
    #endregion
		
		public Supervisor()
		{
			this._Estado = default(EntityRef<Estado>);
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDsupervisor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDsupervisor
		{
			get
			{
				return this._IDsupervisor;
			}
			set
			{
				if ((this._IDsupervisor != value))
				{
					this.OnIDsupervisorChanging(value);
					this.SendPropertyChanging();
					this._IDsupervisor = value;
					this.SendPropertyChanged("IDsupervisor");
					this.OnIDsupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(100)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(100)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlt", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaAlt
		{
			get
			{
				return this._FechaAlt;
			}
			set
			{
				if ((this._FechaAlt != value))
				{
					this.OnFechaAltChanging(value);
					this.SendPropertyChanging();
					this._FechaAlt = value;
					this.SendPropertyChanged("FechaAlt");
					this.OnFechaAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtipousuario", DbType="Char(1)")]
		public System.Nullable<char> IDtipousuario
		{
			get
			{
				return this._IDtipousuario;
			}
			set
			{
				if ((this._IDtipousuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDtipousuarioChanging(value);
					this.SendPropertyChanging();
					this._IDtipousuario = value;
					this.SendPropertyChanged("IDtipousuario");
					this.OnIDtipousuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bTieneUsuario", DbType="Int")]
		public System.Nullable<int> bTieneUsuario
		{
			get
			{
				return this._bTieneUsuario;
			}
			set
			{
				if ((this._bTieneUsuario != value))
				{
					this.OnbTieneUsuarioChanging(value);
					this.SendPropertyChanging();
					this._bTieneUsuario = value;
					this.SendPropertyChanged("bTieneUsuario");
					this.OnbTieneUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Supervisor", Storage="_Estado", ThisKey="IDestado", OtherKey="IDestado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Supervisors.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Supervisors.Add(this);
						this._IDestado = value.IDestado;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Supervisor", Storage="_TipoUsuario", ThisKey="IDtipousuario", OtherKey="IDtipousuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.Supervisors.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.Supervisors.Add(this);
						this._IDtipousuario = value.IDtipousuario;
					}
					else
					{
						this._IDtipousuario = default(Nullable<char>);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tecnico")]
	public partial class Tecnico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDtecnico;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Telefono;
		
		private System.Nullable<System.DateTime> _FechaAlt;
		
		private System.Nullable<int> _IDestado;
		
		private System.Nullable<char> _IDtipousuario;
		
		private System.Nullable<int> _bTieneUsuario;
		
		private EntitySet<Corte> _Cortes;
		
		private EntitySet<Reparacion> _Reparacions;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDtecnicoChanging(int value);
    partial void OnIDtecnicoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFechaAltChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaAltChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    partial void OnIDtipousuarioChanging(System.Nullable<char> value);
    partial void OnIDtipousuarioChanged();
    partial void OnbTieneUsuarioChanging(System.Nullable<int> value);
    partial void OnbTieneUsuarioChanged();
    #endregion
		
		public Tecnico()
		{
			this._Cortes = new EntitySet<Corte>(new Action<Corte>(this.attach_Cortes), new Action<Corte>(this.detach_Cortes));
			this._Reparacions = new EntitySet<Reparacion>(new Action<Reparacion>(this.attach_Reparacions), new Action<Reparacion>(this.detach_Reparacions));
			this._Estado = default(EntityRef<Estado>);
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtecnico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDtecnico
		{
			get
			{
				return this._IDtecnico;
			}
			set
			{
				if ((this._IDtecnico != value))
				{
					this.OnIDtecnicoChanging(value);
					this.SendPropertyChanging();
					this._IDtecnico = value;
					this.SendPropertyChanged("IDtecnico");
					this.OnIDtecnicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(100)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(100)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlt", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaAlt
		{
			get
			{
				return this._FechaAlt;
			}
			set
			{
				if ((this._FechaAlt != value))
				{
					this.OnFechaAltChanging(value);
					this.SendPropertyChanging();
					this._FechaAlt = value;
					this.SendPropertyChanged("FechaAlt");
					this.OnFechaAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtipousuario", DbType="Char(1)")]
		public System.Nullable<char> IDtipousuario
		{
			get
			{
				return this._IDtipousuario;
			}
			set
			{
				if ((this._IDtipousuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDtipousuarioChanging(value);
					this.SendPropertyChanging();
					this._IDtipousuario = value;
					this.SendPropertyChanged("IDtipousuario");
					this.OnIDtipousuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bTieneUsuario", DbType="Int")]
		public System.Nullable<int> bTieneUsuario
		{
			get
			{
				return this._bTieneUsuario;
			}
			set
			{
				if ((this._bTieneUsuario != value))
				{
					this.OnbTieneUsuarioChanging(value);
					this.SendPropertyChanging();
					this._bTieneUsuario = value;
					this.SendPropertyChanged("bTieneUsuario");
					this.OnbTieneUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnico_Corte", Storage="_Cortes", ThisKey="IDtecnico", OtherKey="IDtecnico")]
		public EntitySet<Corte> Cortes
		{
			get
			{
				return this._Cortes;
			}
			set
			{
				this._Cortes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnico_Reparacion", Storage="_Reparacions", ThisKey="IDtecnico", OtherKey="IDtecnico")]
		public EntitySet<Reparacion> Reparacions
		{
			get
			{
				return this._Reparacions;
			}
			set
			{
				this._Reparacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Tecnico", Storage="_Estado", ThisKey="IDestado", OtherKey="IDestado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Tecnicos.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Tecnicos.Add(this);
						this._IDestado = value.IDestado;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Tecnico", Storage="_TipoUsuario", ThisKey="IDtipousuario", OtherKey="IDtipousuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.Tecnicos.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.Tecnicos.Add(this);
						this._IDtipousuario = value.IDtipousuario;
					}
					else
					{
						this._IDtipousuario = default(Nullable<char>);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cortes(Corte entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = this;
		}
		
		private void detach_Cortes(Corte entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = null;
		}
		
		private void attach_Reparacions(Reparacion entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = this;
		}
		
		private void detach_Reparacions(Reparacion entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoRockola")]
	public partial class TipoRockola : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDtiporockola;
		
		private string _tipo;
		
		private EntitySet<Venta> _Ventas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDtiporockolaChanging(int value);
    partial void OnIDtiporockolaChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public TipoRockola()
		{
			this._Ventas = new EntitySet<Venta>(new Action<Venta>(this.attach_Ventas), new Action<Venta>(this.detach_Ventas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtiporockola", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDtiporockola
		{
			get
			{
				return this._IDtiporockola;
			}
			set
			{
				if ((this._IDtiporockola != value))
				{
					this.OnIDtiporockolaChanging(value);
					this.SendPropertyChanging();
					this._IDtiporockola = value;
					this.SendPropertyChanged("IDtiporockola");
					this.OnIDtiporockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="NVarChar(100)")]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoRockola_Venta", Storage="_Ventas", ThisKey="IDtiporockola", OtherKey="IDtiporockola")]
		public EntitySet<Venta> Ventas
		{
			get
			{
				return this._Ventas;
			}
			set
			{
				this._Ventas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ventas(Venta entity)
		{
			this.SendPropertyChanging();
			entity.TipoRockola = this;
		}
		
		private void detach_Ventas(Venta entity)
		{
			this.SendPropertyChanging();
			entity.TipoRockola = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuario")]
	public partial class TipoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _IDtipousuario;
		
		private string _Nombre;
		
		private System.Nullable<int> _Habilitado;
		
		private EntitySet<Supervisor> _Supervisors;
		
		private EntitySet<Tecnico> _Tecnicos;
		
		private EntitySet<Usuario> _Usuarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDtipousuarioChanging(char value);
    partial void OnIDtipousuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public TipoUsuario()
		{
			this._Supervisors = new EntitySet<Supervisor>(new Action<Supervisor>(this.attach_Supervisors), new Action<Supervisor>(this.detach_Supervisors));
			this._Tecnicos = new EntitySet<Tecnico>(new Action<Tecnico>(this.attach_Tecnicos), new Action<Tecnico>(this.detach_Tecnicos));
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtipousuario", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char IDtipousuario
		{
			get
			{
				return this._IDtipousuario;
			}
			set
			{
				if ((this._IDtipousuario != value))
				{
					this.OnIDtipousuarioChanging(value);
					this.SendPropertyChanging();
					this._IDtipousuario = value;
					this.SendPropertyChanged("IDtipousuario");
					this.OnIDtipousuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Supervisor", Storage="_Supervisors", ThisKey="IDtipousuario", OtherKey="IDtipousuario")]
		public EntitySet<Supervisor> Supervisors
		{
			get
			{
				return this._Supervisors;
			}
			set
			{
				this._Supervisors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Tecnico", Storage="_Tecnicos", ThisKey="IDtipousuario", OtherKey="IDtipousuario")]
		public EntitySet<Tecnico> Tecnicos
		{
			get
			{
				return this._Tecnicos;
			}
			set
			{
				this._Tecnicos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_Usuarios", ThisKey="IDtipousuario", OtherKey="TipoUsuario")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Supervisors(Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_Supervisors(Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
		
		private void attach_Tecnicos(Tecnico entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_Tecnicos(Tecnico entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario1 = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDusuario;
		
		private string _Nombre;
		
		private string _Contraseña;
		
		private System.Nullable<char> _TipoUsuario;
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _IDrol;
		
		private System.Nullable<int> _Habilitado;
		
		private EntityRef<Rol> _Rol;
		
		private EntityRef<TipoUsuario> _TipoUsuario1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDusuarioChanging(int value);
    partial void OnIDusuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnTipoUsuarioChanging(System.Nullable<char> value);
    partial void OnTipoUsuarioChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnIDrolChanging(System.Nullable<int> value);
    partial void OnIDrolChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    #endregion
		
		public Usuario()
		{
			this._Rol = default(EntityRef<Rol>);
			this._TipoUsuario1 = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDusuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDusuario
		{
			get
			{
				return this._IDusuario;
			}
			set
			{
				if ((this._IDusuario != value))
				{
					this.OnIDusuarioChanging(value);
					this.SendPropertyChanging();
					this._IDusuario = value;
					this.SendPropertyChanged("IDusuario");
					this.OnIDusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(100)")]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoUsuario", DbType="Char(1)")]
		public System.Nullable<char> TipoUsuario
		{
			get
			{
				return this._TipoUsuario;
			}
			set
			{
				if ((this._TipoUsuario != value))
				{
					if (this._TipoUsuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._TipoUsuario = value;
					this.SendPropertyChanged("TipoUsuario");
					this.OnTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrol", DbType="Int")]
		public System.Nullable<int> IDrol
		{
			get
			{
				return this._IDrol;
			}
			set
			{
				if ((this._IDrol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrolChanging(value);
					this.SendPropertyChanging();
					this._IDrol = value;
					this.SendPropertyChanged("IDrol");
					this.OnIDrolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Rol", ThisKey="IDrol", OtherKey="IDrol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._IDrol = value.IDrol;
					}
					else
					{
						this._IDrol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_TipoUsuario1", ThisKey="TipoUsuario", OtherKey="IDtipousuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario1
		{
			get
			{
				return this._TipoUsuario1.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario1.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario1.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._TipoUsuario1.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._TipoUsuario = value.IDtipousuario;
					}
					else
					{
						this._TipoUsuario = default(Nullable<char>);
					}
					this.SendPropertyChanged("TipoUsuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venta")]
	public partial class Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDventa;
		
		private System.Nullable<int> _IDtiporockola;
		
		private string _Color;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<int> _IDrockola;
		
		private System.Nullable<int> _Habilitado;
		
		private string _NombreCliente;
		
		private System.Nullable<System.DateTime> _FechaVenta;
		
		private EntityRef<Rockola> _Rockola;
		
		private EntityRef<TipoRockola> _TipoRockola;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDventaChanging(int value);
    partial void OnIDventaChanged();
    partial void OnIDtiporockolaChanging(System.Nullable<int> value);
    partial void OnIDtiporockolaChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnPrecioChanging(System.Nullable<decimal> value);
    partial void OnPrecioChanged();
    partial void OnIDrockolaChanging(System.Nullable<int> value);
    partial void OnIDrockolaChanged();
    partial void OnHabilitadoChanging(System.Nullable<int> value);
    partial void OnHabilitadoChanged();
    partial void OnNombreClienteChanging(string value);
    partial void OnNombreClienteChanged();
    partial void OnFechaVentaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaVentaChanged();
    #endregion
		
		public Venta()
		{
			this._Rockola = default(EntityRef<Rockola>);
			this._TipoRockola = default(EntityRef<TipoRockola>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDventa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDventa
		{
			get
			{
				return this._IDventa;
			}
			set
			{
				if ((this._IDventa != value))
				{
					this.OnIDventaChanging(value);
					this.SendPropertyChanging();
					this._IDventa = value;
					this.SendPropertyChanged("IDventa");
					this.OnIDventaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtiporockola", DbType="Int")]
		public System.Nullable<int> IDtiporockola
		{
			get
			{
				return this._IDtiporockola;
			}
			set
			{
				if ((this._IDtiporockola != value))
				{
					if (this._TipoRockola.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDtiporockolaChanging(value);
					this.SendPropertyChanging();
					this._IDtiporockola = value;
					this.SendPropertyChanged("IDtiporockola");
					this.OnIDtiporockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(150)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDrockola", DbType="Int")]
		public System.Nullable<int> IDrockola
		{
			get
			{
				return this._IDrockola;
			}
			set
			{
				if ((this._IDrockola != value))
				{
					if (this._Rockola.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDrockolaChanging(value);
					this.SendPropertyChanging();
					this._IDrockola = value;
					this.SendPropertyChanged("IDrockola");
					this.OnIDrockolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int")]
		public System.Nullable<int> Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCliente", DbType="NVarChar(250)")]
		public string NombreCliente
		{
			get
			{
				return this._NombreCliente;
			}
			set
			{
				if ((this._NombreCliente != value))
				{
					this.OnNombreClienteChanging(value);
					this.SendPropertyChanging();
					this._NombreCliente = value;
					this.SendPropertyChanged("NombreCliente");
					this.OnNombreClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaVenta", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaVenta
		{
			get
			{
				return this._FechaVenta;
			}
			set
			{
				if ((this._FechaVenta != value))
				{
					this.OnFechaVentaChanging(value);
					this.SendPropertyChanging();
					this._FechaVenta = value;
					this.SendPropertyChanged("FechaVenta");
					this.OnFechaVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rockola_Venta", Storage="_Rockola", ThisKey="IDrockola", OtherKey="IDrockola", IsForeignKey=true)]
		public Rockola Rockola
		{
			get
			{
				return this._Rockola.Entity;
			}
			set
			{
				Rockola previousValue = this._Rockola.Entity;
				if (((previousValue != value) 
							|| (this._Rockola.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rockola.Entity = null;
						previousValue.Ventas.Remove(this);
					}
					this._Rockola.Entity = value;
					if ((value != null))
					{
						value.Ventas.Add(this);
						this._IDrockola = value.IDrockola;
					}
					else
					{
						this._IDrockola = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rockola");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoRockola_Venta", Storage="_TipoRockola", ThisKey="IDtiporockola", OtherKey="IDtiporockola", IsForeignKey=true)]
		public TipoRockola TipoRockola
		{
			get
			{
				return this._TipoRockola.Entity;
			}
			set
			{
				TipoRockola previousValue = this._TipoRockola.Entity;
				if (((previousValue != value) 
							|| (this._TipoRockola.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoRockola.Entity = null;
						previousValue.Ventas.Remove(this);
					}
					this._TipoRockola.Entity = value;
					if ((value != null))
					{
						value.Ventas.Add(this);
						this._IDtiporockola = value.IDtiporockola;
					}
					else
					{
						this._IDtiporockola = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoRockola");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
